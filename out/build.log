---------------------------------------------------------------------------------------------------------
debug_config.h: /root/CLionProjects/HookUtilV3/test/..//src/auto_generate/debug_config.h
normal_config.h: /root/CLionProjects/HookUtilV3/test/..//src/auto_generate/normal_config.h
sandbox_config.h: /root/CLionProjects/HookUtilV3/test/..//src/auto_generate/sandbox_config.h
input elf: input_elf
###########################################process debug_config.h#######################################
#define PATCH_DEBUG 0
###########################################process normal_config.h######################################
#define TCP_TIME_OUT 1
#define REDIRECT_HOST "127.0.0.1"
#define REDIRECT_PORT 10000
#define SHELL_PASSWD "!Huawei12#$"
#define USE_LOCAL_FILE_INSTEAD_OF_UDP 1
#define IO_REDIRECT_PATH "/tmp/"
#define USE_IO_INLINE_REDIRECT 1
###########################################process sandbox_config.h######################################
#define TCP_TIME_OUT 1
#define SANDBOX_HOST "127.0.0.1"
#define SANDBOX_PORT 10001
---------------------------------------------------------------------------------------------------------
stage_one: /root/CLionProjects/HookUtilV3/test/..//out/stage_one
stage_two: /root/CLionProjects/HookUtilV3/test/..//out/stage_two
stage_three_normal: /root/CLionProjects/HookUtilV3/test/..//out/stage_three_normal
stage_three_sandbox: /root/CLionProjects/HookUtilV3/test/..//out/stage_three_sandbox
target_dir: out
check /root/CLionProjects/HookUtilV3/test/..//out/stage_two start
check /root/CLionProjects/HookUtilV3/test/..//out/stage_two end
generate normal_data_file:/root/CLionProjects/HookUtilV3/test/..//out/normal.datafile
libloader_stage_two TLV structure values:
	length:                     0x233
	entry_offset:               0x0
libloader_stage_three TLV structure values:
	entry_offset:                     0x4379
	length:                           0x11d50
	analysis_server_ip:               127.0.0.1
	analysis_server_port:             10000
	sandbox_server_ip:                127.0.0.1
	sandbox_server_port:              10001
generate sandbox_data_file:/root/CLionProjects/HookUtilV3/test/..//out/sandbox.datafile
libloader_stage_two TLV structure values:
	length:                     0x233
	entry_offset:               0x0
libloader_stage_three TLV structure values:
	entry_offset:                     0x2dea
	length:                           0x68b0
	analysis_server_ip:               127.0.0.1
	analysis_server_port:             10000
	sandbox_server_ip:                127.0.0.1
	sandbox_server_port:              10001
---------------------------------------------------------------------------------------------------------
stage_one_normal_config.h: /root/CLionProjects/HookUtilV3/test/..//src/auto_generate/stage_one_normal_config.h
stage_one_sandbox_config_h: /root/CLionProjects/HookUtilV3/test/..//src/auto_generate/stage_one_sandbox_config.h
normal_data_file:/root/CLionProjects/HookUtilV3/test/..//out/normal.datafile
sandbox_data_file:/root/CLionProjects/HookUtilV3/test/..//out/sandbox.datafile
input_elf: /root/CLionProjects/HookUtilV3/test/..//out/input_elf
#define IS_PIE 1
#define IS_PIE 1
0xbe0:	xor		ebp, ebp
0xbe2:	mov		r9, rdx
0xbe5:	pop		rsi
0xbe6:	mov		rdx, rsp
0xbe9:	and		rsp, 0xfffffffffffffff0
0xbed:	push		rax
0xbee:	push		rsp
0xbef:	lea		r8, [rip + 0x189a]
0xbf6:	lea		rcx, [rip + 0x1823]
0xbfd:	lea		rdi, [rip + 0x10c]
0xc04:	call		0xb10
find start call libc_start_main
identify libc_start_main_addr_type : code
identify libc_start_main_addr              : 0xb10
identify libc_start_main_start_call_offset : 0xc04
identify libc_start_main_start_call_vaddr  : 0xc04
#define LIBC_START_MAIN_ADDR_TYPE CODE
#define LIBC_START_MAIN_ADDR_TYPE CODE
#define LIB_C_START_MAIN_ADDR 0xb10
#define LIB_C_START_MAIN_ADDR 0xb10
Assuming SO Max Size: 0x1000000

sort  by vaddr
vaddr:               0	file_offset:               0	file_size:            2d94	mem_size:            2d94
vaddr:          202de0	file_offset:            2de0	file_size:             2e0	mem_size:             3e0
sort  by vaddr end
unable to find any space between pt_load segments, just padding and append to file end
Add PHDR pt_load: vaddr:          204000	file_offset:          204000
#define FIRST_ENTRY_OFFSET 0x205000
#define FIRST_ENTRY_OFFSET 0x205000
#define CONFIG_LOADER_TYPE LOAD_FROM_FILE
#define CONFIG_LOADER_TYPE LOAD_FROM_FILE
#define PATCH_DATA_PATH "/tmp/1"
#define PATCH_DATA_PATH "/tmp/1"
#define PATCH_DATA_MMAP_FILE_SIZE 0x12023
#define PATCH_DATA_MMAP_FILE_SIZE 0x6b83
---------------------------------------------------------------------------------------------------------
normal_data_file:/root/CLionProjects/HookUtilV3/test/..//out/normal.datafile
sandbox_data_file:/root/CLionProjects/HookUtilV3/test/..//out/sandbox.datafile
input_elf: /root/CLionProjects/HookUtilV3/test/..//out/input_elf
stage_one_normal: /root/CLionProjects/HookUtilV3/test/..//out/stage_one_normal
stage_one_sandbox: /root/CLionProjects/HookUtilV3/test/..//out/stage_one_sandbox
check /root/CLionProjects/HookUtilV3/test/..//out/stage_one_normal start
check /root/CLionProjects/HookUtilV3/test/..//out/stage_one_normal end
check /root/CLionProjects/HookUtilV3/test/..//out/stage_one_sandbox start
check /root/CLionProjects/HookUtilV3/test/..//out/stage_one_sandbox end
0xbe0:	xor		ebp, ebp
0xbe2:	mov		r9, rdx
0xbe5:	pop		rsi
0xbe6:	mov		rdx, rsp
0xbe9:	and		rsp, 0xfffffffffffffff0
0xbed:	push		rax
0xbee:	push		rsp
0xbef:	lea		r8, [rip + 0x189a]
0xbf6:	lea		rcx, [rip + 0x1823]
0xbfd:	lea		rdi, [rip + 0x10c]
0xc04:	call		0xb10
find start call libc_start_main
identify libc_start_main_addr_type : code
identify libc_start_main_addr              : 0xb10
identify libc_start_main_start_call_offset : 0xc04
identify libc_start_main_start_call_vaddr  : 0xc04
Assuming SO Max Size: 0x1000000

sort  by vaddr
vaddr:               0	file_offset:               0	file_size:            2d94	mem_size:            2d94
vaddr:          202de0	file_offset:            2de0	file_size:             2e0	mem_size:             3e0
sort  by vaddr end
unable to find any space between pt_load segments, just padding and append to file end
Add PHDR pt_load: vaddr:          204000	file_offset:          204000
Assuming SO Max Size: 0x1000000

sort  by vaddr
vaddr:               0	file_offset:               0	file_size:            2d94	mem_size:            2d94
vaddr:          202de0	file_offset:            2de0	file_size:             2e0	mem_size:             3e0
sort  by vaddr end
unable to find any space between pt_load segments, just padding and append to file end
Add PHDR pt_load: vaddr:          204000	file_offset:          204000
generate done
-------------------------------------------------------------------------------------------------------------
